{"questions": [{"category": "medium", "question": "Pylab is a package that combine _______,________&______ into a single namespace.", "choices": ["Numpy, scipy & matplotlib", "Numpy, matplotlib & pandas", "Numpy, pandas & matplotlib", "Numpy, scipy & pandas"], "correctAnswer": 0}, {"category": "medium", "question": "print('any'.encode())", "choices": ["\u2018any\u2019", "\u2018yan\u2019", "b\u2019any\u2019", "x\u2019any\u2019"], "correctAnswer": 2}, {"category": "medium", "question": "Which among them is used to create an object?", "choices": ["A class", "A function", "A method", "A constructor"], "correctAnswer": 3}, {"category": "medium", "question": "Which among them will produce {'a', 'b', 'c'}?", "choices": ["Tuple(''abc'')", "List(''abc'')", "Set(''abac'')", "None of the above."], "correctAnswer": 3}, {"category": "medium", "question": "Select the correct code to create a check button under parent frame1 and it should be bind to v1?", "choices": ["CheckButton(frame1, text=''Bold'' , command=CheckButton)", "Checkbutton(frame1 , text=''Bold\u2019\u2019 ,variable=v1 ,command=processCheckbutton)", "Checkbutton(frame1,text=''Bold'',variable=v1.set(),command=v1.set(processCheckbut ton)", "Checkbutton(frame1,text=''Bold'',variable=v1.set(),command=v1.set(processCheckbut ton)"], "correctAnswer": 1}, {"category": "medium", "question": "Which way among them is used to create an event loop ?", "choices": ["Window.eventloop()", "Window.mainloop()", "Window.loop()", "Eventloop.window()"], "correctAnswer": 1}, {"category": "medium", "question": "If a class defines the __str__(self) method, for an object obj for the class, you can use which command to invoke the __str__ method.", "choices": ["obj.__str__()", "str(obj)", "print obj", "All of the mentioned"], "correctAnswer": 3}, {"category": "medium", "question": "Suppose i is 5 and j is 4, i + j is same as", "choices": ["i.__add(j)", "i.__add__(j)", "i.__Add(j)", "i.__ADD(j)"], "correctAnswer": 1}, {"category": "medium", "question": "What function do you use to read a string?", "choices": ["input(\u201cEnter a string\u201d)", "eval(input(\u201cEnter a string\u201d))", "enter(\u201cEnter a string\u201d)", "eval(enter(\u201cEnter a string\u201d))"], "correctAnswer": 0}, {"category": "medium", "question": "Suppose x is 345.3546, what is format(x, \u201c10.3f\u201d) (_ indicates space)", "choices": ["__345.355", "___345.355", "____345.355", "_____345.354"], "correctAnswer": 1}, {"category": "medium", "question": "print('xyyxyyxyxyxxy'.replace('xy', '12', 0))", "choices": ["xyyxyyxyxyxxy", "12y12y1212x12", "12yxyyxyxyxxy", "xyyxyyxyxyx12"], "correctAnswer": 0}, {"category": "medium", "question": "print('abcdefcdghcd'.split('cd', 0))", "choices": ["[\u2018abcdefcdghcd\u2019]", "\u2018abcdefcdghcd\u2019", "error", "none of the mentioned"], "correctAnswer": 0}, {"category": "medium", "question": "print('abcdefcdghcd'.split('cd', -1))", "choices": ["[\u2018ab\u2019, \u2018ef\u2019, \u2018gh\u2019]", "[\u2018ab\u2019, \u2018ef\u2019, \u2018gh\u2019, \u201d]", "(\u2018ab\u2019, \u2018ef\u2019, \u2018gh\u2019)", "(\u2018ab\u2019, \u2018ef\u2019, \u2018gh\u2019, \u201d)"], "correctAnswer": 1}, {"category": "medium", "question": "Which of the following functions can help us to find the version of python that we are currently working on?", "choices": ["sys.version", "sys.version()", "sys.version(0)", "sys.version(1)"], "correctAnswer": 0}, {"category": "medium", "question": "Which of the following functions is not defined under the sys module?", "choices": ["sys.platform", "sys.path", "sys.readline", "sys.argv"], "correctAnswer": 2}, {"category": "medium", "question": "sys.stdout.write(\"hello world\")", "choices": ["helloworld", "hello world10", "hello world11", "error"], "correctAnswer": 2}, {"category": "medium", "question": "sys.argv", "choices": ["\u2018 \u2018", "[ ]", "[\u2018 \u2018]", "Error"], "correctAnswer": 2}, {"category": "medium", "question": "To obtain a list of all the functions defined under sys module, which of the following functions can be used?", "choices": ["print(sys)", "print(dir.sys)", "print(dir[sys])", "print(dir(sys))"], "correctAnswer": 3}, {"category": "medium", "question": "random.choice('sun')", "choices": ["sun", "u", "either s, u or n", "error"], "correctAnswer": 2}, {"category": "medium", "question": "What the does random.seed(3) return?", "choices": ["TRUE", "None", "3", "1"], "correctAnswer": 1}, {"category": "medium", "question": "Which of the following cannot be returned by random.randrange(4)?", "choices": ["0", "3", "2.3", "none of the mentioned"], "correctAnswer": 2}, {"category": "medium", "question": "Which of the following is equivalent to random.randrange(3)?", "choices": ["range(3)", "random.choice(range(0, 3))", "random.shuffle(range(3))", "random.select(range(3))"], "correctAnswer": 1}, {"category": "medium", "question": "Which of the following will never be displayed on executing print(random.choice({0: 1, 2: 3}))?", "choices": ["0", "1", "KeyError: 1", "none of the mentioned"], "correctAnswer": 0}, {"category": "medium", "question": "What does random.shuffle(x) do when x = [1, 2, 3]?", "choices": ["error", "do nothing, it is a placeholder for a function that is yet to be implemented", "shuffle the elements of the list in-place", "none of the mentioned"], "correctAnswer": 2}, {"category": "medium", "question": "Which type of elements are accepted by random.shuffle()?", "choices": ["strings", "lists", "tuples", "integers"], "correctAnswer": 1}, {"category": "medium", "question": "What is the range of values that random.random() can return?", "choices": ["[0.0, 1.0]", "(0.0, 1.0]", "(0.0, 1.0)", "[0.0, 1.0)"], "correctAnswer": 3}, {"category": "medium", "question": "a={i: i*i for i in range(6)}", "choices": ["Dictionary comprehension doesn\u2019t exist", "{0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6:36}", "{0: 0, 1: 1, 4: 4, 9: 9, 16: 16, 25: 25}", "{0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25}"], "correctAnswer": 3}, {"category": "medium", "question": ">>> a={}\\n>>> a.fromkeys([1,2,3],\"check\")", "choices": ["Syntax error", "{1:\u201dcheck\u201d,2:\u201dcheck\u201d,3:\u201dcheck\u201d}", "\u201ccheck\u201d", "{1:None,2:None,3:None}"], "correctAnswer": 1}, {"category": "medium", "question": "If b is a dictionary, what does any(b) do?", "choices": ["Returns True if any key of the dictionary is true", "Returns False if dictionary is empty", "Returns True if all keys of the dictionary are true", "Method any() doesn\u2019t exist for dictionary"], "correctAnswer": 0}, {"category": "medium", "question": "Which of the following is not a valid mode to open a file?", "choices": ["ab", "rw", "r+", "w+"], "correctAnswer": 1}, {"category": "medium", "question": "What is the difference between r+ and w+ modes?", "choices": ["no difference", "in r+ the pointer is initially placed at the beginning of the file and the pointer is at the end for w+", "in w+ the pointer is initially placed at the beginning of the file and the pointer is at the end for r+", "depends on the operating system"], "correctAnswer": 1}, {"category": "medium", "question": "How do you get the name of a file from a file object (fp)?", "choices": ["fp.name", "fp.file(name)", "self.__name__(fp)", "fp.__name__()"], "correctAnswer": 0}, {"category": "medium", "question": "Which of the following is not a valid attribute of a file object (fp)?", "choices": ["fp.name", "fp.closed", "fp.mode", "fp.size"], "correctAnswer": 3}, {"category": "medium", "question": "How do you close a file object (fp)?", "choices": ["close(fp)", "fclose(fp)", "fp.close()", "fp.__close__()"], "correctAnswer": 2}, {"category": "medium", "question": "How do you get the current position within the file?", "choices": ["fp.seek()", "fp.tell()", "fp.loc", "fp.pos"], "correctAnswer": 1}, {"category": "medium", "question": "The assignment of more than one function to a particular operator is _______", "choices": ["Operator over-assignment", "Operator overriding", "Operator overloading", "Operator instance"], "correctAnswer": 3}, {"category": "medium", "question": "Which of the following is not a class method?", "choices": ["Non-static", "Static", "Bounded", "Unbounded"], "correctAnswer": 0}, {"category": "medium", "question": "Which of the following functions does not throw an error?", "choices": ["ord()", "ord(\u2018 \u2018)", "ord(\u201d)", "ord(\u201c\u201d)"], "correctAnswer": 1}, {"category": "medium", "question": "Which of the following functions returns a dictionary mapping group names to group numbers?", "choices": ["re.compile.group", "re.compile.groupindex", "re.compile.index", "re.compile.indexgroup"], "correctAnswer": 1}, {"category": "medium", "question": "Which of the following statements regarding the output of the function re.match is incorrect?", "choices": ["\u2018pq*\u2019 will match \u2018pq\u2019", "\u2018pq?\u2019 matches \u2018p\u2019", "\u2018p{4}, q\u2019 does not match \u2018pppq\u2019", "\u2018pq+\u2019 matches \u2018p\u2019"], "correctAnswer": 3}, {"category": "medium", "question": "Which of the following lines of code will not show a match?", "choices": ["re.match(\u2018ab*\u2019, \u2018a\u2019)", "re.match(\u2018ab*\u2019, \u2018ab\u2019)", "re.match(\u2018ab*\u2019, \u2018abb\u2019)", "re.match(\u2018ab*\u2019, \u2018ba\u2019)"], "correctAnswer": 3}, {"category": "medium", "question": "re.sub('Y', 'X', 'AAAAAA', count=2)", "choices": ["\u2018YXAAAA\u2019", "(\u2018YXAAAA\u2019)", "(\u2018AAAAAA\u2019)", "\u2018AAAAAA\u2019"], "correctAnswer": 3}]}