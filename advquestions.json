{"questions": [{"question": "What is the output of print 0.1 + 0.2 == 0.3?\n", "choices": [" True", " False", " Machine dependent", " Error"], "correctAnswer": 0}, {"question": "What is the output of the following?\nprint(\"Hello {0!r} and {0!s}\".format('foo', 'bin'))\n", "choices": [" Hello foo and foo", " Hello \u2018foo\u2019 and foo", " Hello foo and \u2018bin\u2019", " Error"], "correctAnswer": 1}, {"question": "What is the output of the following?\nprint(\"Hello {0} and {1}\".format(('foo', 'bin')))\n", "choices": [" Hello foo and bin", " Hello (\u2018foo\u2019, \u2018bin\u2019) and (\u2018foo\u2019, \u2018bin\u2019)", " Error", " None of the mentioned"], "correctAnswer": 2}, {"question": "What is the output of the following?\nprint(\"Hello {0[0]} and {0[1]}\".format(('foo', 'bin')))\n", "choices": [" Hello foo and bin", " Hello (\u2018foo\u2019, \u2018bin\u2019) and (\u2018foo\u2019, \u2018bin\u2019)", " Error", " None of the mentioned"], "correctAnswer": 0}, {"question": "What is the output of the following?\nprint('The sum of {0} and {1} is {2}'.format(2, 10, 12))\n", "choices": [" The sum of 2 and 10 is 12", " Error", " The sum of 0 and 1 is 2", " None of the mentioned"], "correctAnswer": 0}, {"question": "What is the output of the following?\nfor i in range(5):\n    if i == 5:\n        break\n    else:\n        print(i)\nelse:\n    print(\"Here\")\n", "choices": [" 0 1 2 3 4 Here", " 0 1 2 3 4 5 Here", " 0 1 2 3 4", " 1 2 3 4 5"], "correctAnswer": 0}, {"question": "What is the output of the following?\nx = (i for i in range(3))\nfor i in x:\n    print(i)\n", "choices": [" 0 1 2", " error", " 0 1 2 0 1 2", " none of the mentioned"], "correctAnswer": 0}, {"question": "What is the output of the following?\nstring = \"my name is x\"\nfor i in string:\n    print (i, end=\", \")\n", "choices": [" m, y, , n, a, m, e, , i, s, , x,", " m, y, , n, a, m, e, , i, s, , x", " my, name, is, x,", " error"], "correctAnswer": 0}, {"question": "What is the output of the following?\nprint('ab\\ncd\\nef'.splitlines())\n", "choices": [" [\u2018ab\u2019, \u2018cd\u2019, \u2018ef\u2019].", " [\u2018ab\\n\u2019, \u2018cd\\n\u2019, \u2018ef\\n\u2019].", " [\u2018ab\\n\u2019, \u2018cd\\n\u2019, \u2018ef\u2019].", " [\u2018ab\u2019, \u2018cd\u2019, \u2018ef\\n\u2019]."], "correctAnswer": 0}, {"question": "What is the output of the following?\nprint('Ab!2'.swapcase())\n", "choices": [" AB!@", " ab12", " aB!2", " aB1@"], "correctAnswer": 2}, {"question": "What is the output of the following?\nprint('ab cd ef'.title())\n", "choices": [" Ab cd ef", " Ab cd eF", " Ab Cd Ef", " None of the mentioned"], "correctAnswer": 2}, {"question": "What is the output of the following?\nprint('ab cd-ef'.title())\n", "choices": [" Ab cd-ef", " Ab Cd-ef", " Ab Cd-Ef", " None of the mentioned"], "correctAnswer": 2}, {"question": "What is the output of the following?\nprint('abcd'.translate('a'.maketrans('abc', 'bcd')))\n", "choices": [" bcde", " abcd", " error", " bcdd"], "correctAnswer": 3}, {"question": "What is the output of the following?\nprint('abcd'.translate({97: 98, 98: 99, 99: 100}))\n", "choices": [" bcde", " abcd", " error", " none of the mentioned"], "correctAnswer": 3}, {"question": "What is the output of the following?\nprint('ab'.zfill(5))\n", "choices": [" 000ab", " 00ab0", " 0ab00", " ab000"], "correctAnswer": 0}, {"question": "What is the output of the following?\nprint('+99'.zfill(5))\n", "choices": [" 00+99", " 00099", " +0099", " +++99"], "correctAnswer": 2}, {"question": "What is the output of the following code?\na=[13,56,17]\na.append([87])\na.extend([45,67])\nprint(a)\n", "choices": ["\t[13, 56, 17, [87], 45, 67].", "\t[13, 56, 17, 87, 45, 67].", "\t[13, 56, 17, 87,[ 45, 67]].", "\t[13, 56, 17, [87], [45, 67]]."], "correctAnswer": 0}, {"question": "What is the output of the following piece of code?\na=list((45,)*4)\nprint((45)*4)\nprint(a)\n", "choices": [" 180\n[(45),(45),(45),(45)].", " (45,45,45,45).\n[45,45,45,45].", " 180\n[45,45,45,45].", " Syntax error"], "correctAnswer": 2}, {"question": "What is the output of the following code?\nlst=[[1,2],[3,4]]\nprint(sum(lst,[]))\n", "choices": ["\t[[3],[7]].", "\t[1,2,3,4].", "\tError", "\t[10]."], "correctAnswer": 1}, {"question": "What is the output of the following code?\nword1=\"Apple\"\nword2=\"Apple\"\nlist1=[1,2,3]\nlist2=[1,2,3]\nprint(word1 is word2)\nprint(list1 is list2)\n", "choices": ["\tTrue\nTrue", "\tFalse\nTrue", "\tFalse\nFalse", "\tTrue\nFalse"], "correctAnswer": 3}, {"question": "What is the output of the following code?\ndef unpack(a,b,c,d):\n    print(a+d)\nx = [1,2,3,4]\nunpack(*x)\n", "choices": ["\tError", "\t[1,4].", "\t[5].", "\t5"], "correctAnswer": 3}, {"question": "What is the output of the following piece of code?\nx=[[1],[2]]\nprint(\" \".join(list(map(str,x))))\n", "choices": ["\t[1] [2].", "\t[49] [50].", "\tSyntax error", "\t[[1]] [[2]]."], "correctAnswer": 0}, {"question": "What is the output of the following code?\na= [1, 2, 3, 4, 5]\nfor i in range(1, 5):\n    a[i-1] = a[i]\nfor i in range(0, 5): \n    print(a[i],end = \" \")\n", "choices": ["\t5 5 1 2 3", "\t5 1 2 3 4", "\t2 3 4 5 1", "\t2 3 4 5 5"], "correctAnswer": 3}, {"question": " What is the output of the following code?\ndef change(var, lst):\n    var = 1\n    lst[0] = 44\nk = 3\na = [1, 2, 3]\nchange(k, a)\nprint(k)\nprint(a)\n", "choices": ["\t3\n[44, 2, 3].", "\t1\n[1,2,3].", "\t3\n[1,2,3].", "\t1\n[44,2,3]."], "correctAnswer": 0}, {"question": "What is the output of the following code?\na=[\"Apple\",\"Ball\",\"Cobra\"]\n<br class=\"blank\" />a.sort(key=len)\nprint(a)\n", "choices": ["\t[\u2018Apple\u2019, \u2018Ball\u2019, \u2018Cobra\u2019].", "\t[\u2018Ball\u2019, \u2018Apple\u2019, \u2018Cobra\u2019].", "\t[\u2018Cobra\u2019, \u2018Apple\u2019, \u2018Ball\u2019].", "\tInvalid syntax for sort()."], "correctAnswer": 1}, {"question": "What is the output of the following code?\nnum = ['One', 'Two', 'Three']\nfor i, x in enumerate(num):\n    print('{}: {}'.format(i, x),end=\" \")\n", "choices": ["\t1: 2: 3:", "\tException is thrown", "\tOne Two Three", "\t0: One 1: Two 2: Three"], "correctAnswer": 3}, {"question": "Write a list comprehension for producing a list of numbers between 1 and 1000 that are divisible by 3.\n", "choices": [" [x in range(1, 1000) if x%3==0]", " [x for x in range(1000) if x%3==0]", " [x%3 for x in range(1, 1000)]", " [x%3=0 for x in range(1, 1000)]"], "correctAnswer": 1}, {"question": "What is the list comprehension equivalent for: list(map(lambda x:x**-1, [1, 2, 3]))\n", "choices": [" [1|x for x in [1, 2, 3]]", " [-1**x for x in [1, 2, 3]]", " [x**-1 for x in [1, 2, 3]]", " [x^-1 for x in range(4)]"], "correctAnswer": 2}, {"question": "Write a list comprehension to produce the list: [1, 2, 4, 8, 16\u2026\u2026212].\n", "choices": [" [(2**x) for x in range(0, 13)]", " [(x**2) for x in range(1, 13)]", " [(2**x) for x in range(1, 13)]", " [(x**2) for x in range(0, 13)]"], "correctAnswer": 0}, {"question": "What is the output of the code shown below?\nl=[\"good\", \"oh!\", \"excellent!\", \"#450\"]\n[n for n in l if n.isalpha() or n.isdigit()]\n", "choices": [" [\u2018good\u2019, \u2018oh\u2019, \u2018excellent\u2019, \u2018450\u2019\t]", " [\u2018good\u2019]", " [\u2018good\u2019, \u2018#450\u2019]", " [\u2018oh!\u2019, \u2018excellent!\u2019, \u2018#450\u2019]"], "correctAnswer": 1}, {"question": "What is the output of the code shown below?\nx=1\ndef cg():\n\tglobal x\n\tx=x+1\t\ncg()\nx\n", "choices": [" 2", " 1", " 0", " Error"], "correctAnswer": 0}, {"question": "What is the output of the code shown below?\na=10\nglobals()['a']=25\nprint(a)\n", "choices": [" 10", " 25", " Junk value", " Error"], "correctAnswer": 1}, {"question": "What is the output of this code?\ndef f(): x=4\nx=1\nf()\nx\n", "choices": [" Error", " 4", " Junk value", " 1"], "correctAnswer": 3}, {"question": "What is the output of the following piece of code when executed in the Python shell?\n>>> class A:\n\tpass\n>>> class B(A):\n\tpass\n>>> obj=B()\n>>> isinstance(obj,A)\n", "choices": ["\tTrue", "\tFalse", "\tWrong syntax for isinstance() method", "\tInvalid method for classes"], "correctAnswer": 0}, {"question": "What is the output of the following?\nx = [[0], [1]]\nprint((' '.join(list(map(str, x))),))\n", "choices": [" (\u2018[0] [1]\u2019,)", " (\u201901\u2019)", " [0] [1].", " 01"], "correctAnswer": 0}, {"question": "What is the output of the following?\nx = [34, 56]\nprint((''.join(list(map(str, x))),))\n", "choices": [" 3456", " (3456)", " (\u20183456\u2019)", " (\u20183456\u2019,)"], "correctAnswer": 3}, {"question": "What is the output of the following?\nx = [34, 56]\nprint(len(map(str, x)))\n", "choices": [" [34, 56].", " [\u201934\u2019, \u201956\u2019].", " 34 56", " error"], "correctAnswer": 3}, {"question": "What is the output of the following?\nx = 'abcd'\nprint(list(map(list, x)))\n", "choices": [" [\u2018a\u2019, \u2018b\u2019, \u2018c\u2019, \u2018d\u2019].", " [\u2018abcd\u2019].", " [[\u2018a\u2019], [\u2018b\u2019], [\u2018c\u2019], [\u2018d\u2019]].", " none of the mentioned"], "correctAnswer": 2}, {"question": " What is the output of the code shown below?\ndef getMonth(m):\n    if m<1 or m>12:\n        raise ValueError(\"Invalid\")\n    print(m)\ngetMonth(6)\n", "choices": [" ValueError", " Invalid", " 6", " ValueError(\u201cInvalid\u201d)"], "correctAnswer": 2}]}